{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2019-05-23T16:02:08.394Z",
    "end": "2019-05-23T16:02:08.858Z",
    "duration": 464,
    "testsRegistered": 13,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 13,
    "hasSkipped": true,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "b2565515-2f96-4467-ae6f-5adbadf4e0f3",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "4b748eeb-2c0d-43d1-932a-968095089bd1",
        "title": "Functionality Tests ",
        "fullFile": "",
        "file": "",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "dbb20333-4220-4dea-8edb-12550a99323e",
            "title": "Cart functionality",
            "fullFile": "",
            "file": "",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify Cart is empty",
                "fullTitle": "Functionality Tests  Cart functionality Verify Cart is empty",
                "duration": 405,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "var _this = this;\ncy.get(this.cartElements.cartElement).click();\ncy.waitUntil(function () {\n  return cy.get(_this.cartElements.cartEmptyBody).invoke('text').should('contain', _this.cartData.cartEmptyMessage);\n});",
                "err": {
                  "message": "CypressError: cy.visit() failed trying to load:\n\ncategories\n\nWe failed looking for this file at the path:\n\n/Users/husseinabdallah/Desktop/HybridFramework/BigCommerceFrameWork/categories\n\nThe internal Cypress web server responded with:\n\n  > 404: Not Found\n\nBecause this error occurred during a 'before all' hook we are skipping the remaining tests in the current suite: 'Functionality Tests '",
                  "estack": "CypressError: cy.visit() failed trying to load:\n\ncategories\n\nWe failed looking for this file at the path:\n\n/Users/husseinabdallah/Desktop/HybridFramework/BigCommerceFrameWork/categories\n\nThe internal Cypress web server responded with:\n\n  > 404: Not Found\n\nBecause this error occurred during a 'before all' hook we are skipping the remaining tests in the current suite: 'Functionality Tests '\n    at Object.cypressErr (http://localhost:58067/__cypress/runner/cypress_runner.js:65727:11)\n    at Object.throwErr (http://localhost:58067/__cypress/runner/cypress_runner.js:65692:18)\n    at Object.throwErrByPath (http://localhost:58067/__cypress/runner/cypress_runner.js:65719:17)\n    at http://localhost:58067/__cypress/runner/cypress_runner.js:56262:31\n    at visitFailedByErr (http://localhost:58067/__cypress/runner/cypress_runner.js:55840:12)\n    at http://localhost:58067/__cypress/runner/cypress_runner.js:56243:22\n    at tryCatcher (http://localhost:58067/__cypress/runner/cypress_runner.js:131273:23)\n    at Promise._settlePromiseFromHandler (http://localhost:58067/__cypress/runner/cypress_runner.js:129291:31)\n    at Promise._settlePromise (http://localhost:58067/__cypress/runner/cypress_runner.js:129348:18)\n    at Promise._settlePromise0 (http://localhost:58067/__cypress/runner/cypress_runner.js:129393:10)\n    at Promise._settlePromises (http://localhost:58067/__cypress/runner/cypress_runner.js:129468:18)\n    at Async._drainQueue (http://localhost:58067/__cypress/runner/cypress_runner.js:126197:16)\n    at Async._drainQueues (http://localhost:58067/__cypress/runner/cypress_runner.js:126207:10)\n    at Async.drainQueues (http://localhost:58067/__cypress/runner/cypress_runner.js:126081:14)\n    at <anonymous>"
                },
                "isRoot": false,
                "uuid": "0081a69c-351c-477c-83e0-22d2e2783cd4",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Access a Random Product Page",
                "fullTitle": "Functionality Tests  Cart functionality Access a Random Product Page",
                "duration": 0,
                "state": "skipped",
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "cy.get(this.productElements.CategoryProductCard).eq(product).click({\n  force: true,\n  timeout: 60000\n});",
                "err": {},
                "isRoot": false,
                "uuid": "41eb78b2-7ce9-4943-9492-f0617e3bfc0f",
                "isHook": false,
                "skipped": true
              },
              {
                "title": "Verify if Size option is available",
                "fullTitle": "Functionality Tests  Cart functionality Verify if Size option is available",
                "duration": 0,
                "state": "skipped",
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "cy.get('form[data-cart-item-add]').then(function ($options) {\n  if ($options.find('[data-product-attribute-name=\"Size\"][type=\"radio\"] ').length) {\n    cy.get('[data-product-attribute-name=\"Size\"] [type=\"radio\"]').then(function ($sizeOptions) {\n      var sxl = $sizeOptions.length;\n      var sizes2 = Math.floor(Math.random() * ($sizeOptions.length - 1));\n      cy.log('sizes', sxl + \" \" + sizes2);\n      cy.get('[data-product-attribute-name=\"Size\"] [type=\"radio\"]').eq(sizes2).check({\n        force: true\n      });\n    });\n  } else if ($options.find('[data-product-attribute-name=\"Size\"]>select>option').length) {\n    cy.get('[data-product-attribute-name=\"Size\"]>select>option').then(function ($sizeOptions) {\n      var optionslength = $sizeOptions.length;\n      var sizes3 = Math.floor(Math.random() * ($sizeOptions.length - 1));\n      cy.get('[data-product-attribute-name=\"Size\"]>select>option').eq(sizes3).then(function ($selectoption) {\n        cy.get('[data-product-attribute-name=\"Size\"]>select').select($selectoption.text(), {\n          force: true\n        });\n      });\n    });\n  } else {\n    cy.log('Size option is not available');\n  }\n});",
                "err": {},
                "isRoot": false,
                "uuid": "c0117d6a-22c2-4dca-9917-ba4d73f18ed5",
                "isHook": false,
                "skipped": true
              },
              {
                "title": "Verify if Color option is available",
                "fullTitle": "Functionality Tests  Cart functionality Verify if Color option is available",
                "duration": 0,
                "state": "skipped",
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "cy.get('form[data-cart-item-add]').then(function ($options) {\n  if ($options.find('[data-product-attribute-name=\"Color\"]').length) {\n    cy.get('[data-product-attribute-name=\"Color\"] [type=\"radio\"]').then(function ($colorOptions) {\n      var sxl = $colorOptions.length;\n      var sizes2 = Math.floor(Math.random() * ($colorOptions.length - 1));\n      cy.log('sizes', sxl + \" \" + sizes2);\n      cy.get('[data-product-attribute-name=\"Color\"] [type=\"radio\"]').eq(sizes2).check({\n        force: true\n      });\n    });\n  } else {\n    cy.log('Color option is not available');\n  }\n});",
                "err": {},
                "isRoot": false,
                "uuid": "b057c6ae-8a2a-4ac6-a69b-be66068189c5",
                "isHook": false,
                "skipped": true
              },
              {
                "title": "Add & Verify Product in Drop down Cart",
                "fullTitle": "Functionality Tests  Cart functionality Add & Verify Product in Drop down Cart",
                "duration": 0,
                "state": "skipped",
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "var _this2 = this;\ncy.get(this.productElements.productTitle).then(function ($productName) {\n  productTitle = $productName.text();\n  cy.get(_this2.productElements.addToCartForm).should('have.attr', 'type', 'submit').click({\n    force: true,\n    responseTimeout: 60000\n  });\n  cy.wait(1500);\n  cy.waitUntil(function () {\n    return cy.get(_this2.cartElements.cartDropdownHeaderVisibility).should('be.visible');\n  });\n  cy.get(_this2.cartElements.cartElement).then(function ($dropdownCart) {\n    if ($dropdownCart.attr('aria-expanded') === 'true') {\n      cy.get(_this2.productElements.productTitle).then(function ($productName) {\n        cy.get(_this2.cartElements.productTitleDropdownCart).should('contain', productTitle);\n      });\n    } else {\n      cy.get(_this2.productElements.productTitle).then(function ($productName) {\n        cy.get(_this2.cartElements.cartElement).click();\n        cy.get(_this2.cartElements.productTitleDropdownCart).should('contain', productTitle);\n      });\n    }\n  });\n});",
                "err": {},
                "isRoot": false,
                "uuid": "050d50b8-5b58-4dd8-85ee-30ff6fb29620",
                "isHook": false,
                "skipped": true
              },
              {
                "title": "Go to Cart Page and verify product added",
                "fullTitle": "Functionality Tests  Cart functionality Go to Cart Page and verify product added",
                "duration": 0,
                "state": "skipped",
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "cy.get(this.cartElements.dropdownViewCartButton).click();\ncy.get(this.cartElements.productTitle).should('contain', productTitle);",
                "err": {},
                "isRoot": false,
                "uuid": "4b054483-d9d6-4a87-a124-4472a4bead6c",
                "isHook": false,
                "skipped": true
              },
              {
                "title": "Verify the cart badge had been updated to 1",
                "fullTitle": "Functionality Tests  Cart functionality Verify the cart badge had been updated to 1",
                "duration": 0,
                "state": "skipped",
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "cy.get(this.cartElements.cartBadge).then(function ($cartQty) {\n  if ($cartQty.text().includes('1')) {\n    expect($cartQty).to.have.text('1');\n  } else {\n    cy.log('No quantity badge on the cart icon');\n  }\n});",
                "err": {},
                "isRoot": false,
                "uuid": "3e59c2c6-46ce-41aa-b0e4-89e5a6b73eb5",
                "isHook": false,
                "skipped": true
              },
              {
                "title": "Add same product one more",
                "fullTitle": "Functionality Tests  Cart functionality Add same product one more",
                "duration": 0,
                "state": "skipped",
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "var _this3 = this;\ncy.location().then(function (loc) {\n  if (loc.pathname !== '/cart.php') {\n    cy.visit('cart.php');\n  }\n}); //Require Re-writing test script for variation      \ncy.get('body').then(function ($body) {\n  if ($body.find('.definitionList').length) {\n    cy.get('.definitionList').then(function ($list) {\n      if ($list.find('.definitionList-key').text().includes('Size')) {\n        var size = $list.find('.definitionList-value').first().text();\n        size = size.replace(/\\s/g, '');\n      }\n      if ($list.find('.definitionList-key').text().includes('Color')) {\n        var color = $list.find('.definitionList-value').last().text();\n        color = color.replace(/\\s/g, '');\n      }\n      cy.get('.cart-item-name > a').click();\n      cy.get('form[data-cart-item-add]').then(function ($options) {\n        if ($options.find('[data-product-attribute-name=\"Size\"][type=\"radio\"] ').length) {\n          cy.get('[data-product-attribute-name=\"Size\"] [type=\"radio\"]').then(function ($sizeOptions) {\n            cy.get('[data-product-attribute-name=\"Size\"] [type=\"radio\"]').check(size, {\n              force: true\n            });\n          });\n        } else if ($options.find('[data-product-attribute-name=\"Size\"]>select>option').length) {\n          cy.get('[data-product-attribute-name=\"Size\"]>select').select(size, {\n            force: true\n          });\n        } else {\n          cy.log('Size option is not available');\n        }\n      });\n      cy.get('form[data-cart-item-add]').then(function ($options) {\n        if ($options.find('[data-product-attribute-name=\"Color\"]').length) {\n          cy.get('[data-product-attribute-name=\"Color\"] [type=\"radio\"]').then(function ($colorOptions) {\n            cy.get('[title=' + color + ']').parent('label').then(function ($colorVal) {\n              var cValue = $colorVal.attr('data-product-attribute-value');\n              cy.get('[data-product-attribute-name=\"Color\"] [type=\"radio\"]').check(cValue, {\n                force: true\n              });\n            });\n          });\n        } else {\n          cy.log('Color option is not available');\n        }\n      });\n    });\n  } else {\n    cy.get('.cart-item-name > a').click();\n  }\n});\ncy.get(this.productElements.productTitle).then(function ($productName) {\n  var productTitle = $productName.text();\n  cy.get(_this3.productElements.productPrice).first().then(function ($price) {\n    var price = $price.text();\n    price = Number(price.replace(/[^0-9.-]+/g, \"\"));\n    cy.get(_this3.productElements.addToCartForm).should('have.attr', 'type', 'submit').click({\n      force: true,\n      responseTimeout: 60000\n    });\n    cy.wait(2000);\n    cy.waitUntil(function () {\n      return cy.get(_this3.cartElements.cartDropdownHeaderVisibility).should('be.visible');\n    });\n    cy.get(_this3.cartElements.dropdownViewCartButton).click();\n    cy.get(_this3.cartElements.productTitle).should('have.text', productTitle);\n    cy.get(_this3.cartElements.productQuantity).should('have.value', '2');\n    cy.get(_this3.cartElements.productTotalPrice).should('have.text', '$' + price * 2);\n  });\n});",
                "err": {},
                "isRoot": false,
                "uuid": "6e567a1e-843d-4388-82f2-93707c26c2c8",
                "isHook": false,
                "skipped": true
              },
              {
                "title": "verify cart badge quantity eq 2",
                "fullTitle": "Functionality Tests  Cart functionality verify cart badge quantity eq 2",
                "duration": 0,
                "state": "skipped",
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "cy.get(this.cartElements.cartBadge).then(function ($cartQty) {\n  expect($cartQty).to.have.text('2');\n});",
                "err": {},
                "isRoot": false,
                "uuid": "42e775af-acca-4dc1-9663-d8ea8c898cbb",
                "isHook": false,
                "skipped": true
              },
              {
                "title": "Verify checkout button is visible",
                "fullTitle": "Functionality Tests  Cart functionality Verify checkout button is visible",
                "duration": 0,
                "state": "skipped",
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "cy.get(this.cartElements.checkoutButton).should('contain', this.cartData.checkoutButton);",
                "err": {},
                "isRoot": false,
                "uuid": "8da4dca0-8865-4f4c-8abd-51c3aa9b418f",
                "isHook": false,
                "skipped": true
              }
            ],
            "suites": [
              {
                "uuid": "9f750f0b-65da-4d84-bdc7-fb11a06fad67",
                "title": "Verify Coupon Code functionality",
                "fullFile": "",
                "file": "",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [
                  {
                    "title": "Verify Invalid Coupon is Not Accepted",
                    "fullTitle": "Functionality Tests  Cart functionality Verify Coupon Code functionality Verify Invalid Coupon is Not Accepted",
                    "duration": 0,
                    "state": "skipped",
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "var _this4 = this;\ncy.waitUntil(function () {\n  return cy.get(_this4.cartElements.addCouponCodeElement).click();\n});\ncy.get(this.cartElements.couponCodeField).type(this.cartData.invalidCouponData);\ncy.get(this.cartElements.couponCodeForm).submit();\ncy.get(this.cartElements.invalidCouponErrorMessage).should('have.text', this.cartData.invalidCouponErrorMessage);\ncy.get(this.cartElements.confirmCouponErrorMessage).click();\ncy.get(this.cartElements.couponCodeField).clear();\ncy.get(this.cartElements.closeCouponForm).click();",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4e613c09-ce1e-4b51-8717-0c578906be6e",
                    "isHook": false,
                    "skipped": true
                  },
                  {
                    "title": "Verify Valid Coupon is Accepted",
                    "fullTitle": "Functionality Tests  Cart functionality Verify Coupon Code functionality Verify Valid Coupon is Accepted",
                    "duration": 0,
                    "state": "skipped",
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "var _this5 = this;\ncy.waitUntil(function () {\n  return cy.get(_this5.cartElements.addCouponCodeElement).click();\n});\ncy.get(this.cartElements.couponCodeField).type(this.cartData.validCouponData);\ncy.get(this.cartElements.submitCouponForm).submit();\ncy.wait(2000);\ncy.waitUntil(function () {\n  return cy.get(_this5.cartElements.appliedCouponCodeRow).should('have.length', 4);\n}, {\n  timeout: 8000,\n  interval: 500\n});\ncy.waitUntil(function () {\n  return cy.get(_this5.cartElements.appliedCouponCodeRow).contains(_this5.cartData.validCouponData).should('be.visible');\n}, {\n  timeout: 8000,\n  interval: 500\n});\ncy.get(this.cartElements.subtotalPrice).then(function ($subtotal) {\n  var subtotal = $subtotal.text();\n  subtotal = Number(subtotal.replace(/[^0-9.-]+/g, \"\"));\n  cy.get(_this5.cartElements.couponDiscountAmount).then(function ($coupon) {\n    var coupon = $coupon.text();\n    coupon = Number(coupon.replace(/[^0-9.-]+/g, \"\"));\n    var orderTotal = subtotal + coupon;\n    cy.get(_this5.cartElements.grandTotal).should('have.text', '$' + orderTotal.toFixed(2));\n  });\n});\ncy.get(this.cartElements.removeAppliedCoupon).should('be.visible').and('contain', this.cartData.couponRemoveButton).click();\ncy.get(this.cartElements.couponCodeLabel).contains(this.cartData.couponCodeLabel).should('be.visible');",
                    "err": {},
                    "isRoot": false,
                    "uuid": "75d94864-f466-4474-b153-28232729e200",
                    "isHook": false,
                    "skipped": true
                  }
                ],
                "suites": [],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [
                  "4e613c09-ce1e-4b51-8717-0c578906be6e",
                  "75d94864-f466-4474-b153-28232729e200"
                ],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              }
            ],
            "passes": [],
            "failures": [
              "0081a69c-351c-477c-83e0-22d2e2783cd4"
            ],
            "pending": [],
            "skipped": [
              "41eb78b2-7ce9-4943-9492-f0617e3bfc0f",
              "c0117d6a-22c2-4dca-9917-ba4d73f18ed5",
              "b057c6ae-8a2a-4ac6-a69b-be66068189c5",
              "050d50b8-5b58-4dd8-85ee-30ff6fb29620",
              "4b054483-d9d6-4a87-a124-4472a4bead6c",
              "3e59c2c6-46ce-41aa-b0e4-89e5a6b73eb5",
              "6e567a1e-843d-4388-82f2-93707c26c2c8",
              "42e775af-acca-4dc1-9663-d8ea8c898cbb",
              "8da4dca0-8865-4f4c-8abd-51c3aa9b418f"
            ],
            "duration": 405,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "26f5a912-87c8-4dcf-a146-2c7c387f0dbb",
            "title": "Checkout functionality",
            "fullFile": "",
            "file": "",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
              {
                "uuid": "7bf74731-0b1a-4315-9ef6-df9b60b90661",
                "title": "Guest Checkout",
                "fullFile": "",
                "file": "",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [
                  {
                    "title": "Verify Invalid Coupon is Not Accepted",
                    "fullTitle": "Functionality Tests  Checkout functionality Guest Checkout Verify Invalid Coupon is Not Accepted",
                    "duration": 0,
                    "state": "skipped",
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a3d7d770-e171-4fd9-856f-829ded0de617",
                    "isHook": false,
                    "skipped": true
                  }
                ],
                "suites": [],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [
                  "a3d7d770-e171-4fd9-856f-829ded0de617"
                ],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}